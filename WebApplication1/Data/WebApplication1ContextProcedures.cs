// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
using Microsoft.Data.SqlClient;
using Microsoft.EntityFrameworkCore;
using System;
using System.Collections.Generic;
using System.Data;
using System.Threading;
using System.Threading.Tasks;
using WebApplication1.Models;

namespace WebApplication1.Data
{
    public partial class WebApplication1Context1
    {
        private WebApplication1ContextProcedures _procedures;

        public virtual WebApplication1ContextProcedures Procedures
        {
            get
            {
                if (_procedures is null) _procedures = new WebApplication1ContextProcedures(this);
                return _procedures;
            }
            set
            {
                _procedures = value;
            }
        }

        public WebApplication1ContextProcedures GetProcedures()
        {
            return Procedures;
        }

        protected void OnModelCreatingGeneratedProcedures(ModelBuilder modelBuilder)
        {
            modelBuilder.Entity<POSTResult>().HasNoKey().ToView(null);
        }
    }

    public interface IWebApplication1ContextProceduresContract
    {
        Task<List<POSTResult>> POSTAsync(string Emp_ID, string Emp_Name, string Designation, string Location, DateTime? DOJ, DateTime? LWD, string Vertical_L2, string Email_ID, string RM_Emp_ID, string Band, string Level, string Role_ID, CancellationToken cancellationToken = default);
    }

    public partial class WebApplication1ContextProcedures
    {
        private readonly WebApplication1Context1 _context;

        public WebApplication1ContextProcedures(WebApplication1Context1 context)
        {
            _context = context;
        }

        public virtual async Task<List<POSTResult>> POSTAsync(string Emp_ID, string Emp_Name, string Designation, string Location, DateTime? DOJ, DateTime? LWD, string Vertical_L2, string Email_ID, string RM_Emp_ID, string Band, string Level, string Role_ID, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default)
        {
            var parameterreturnValue = new SqlParameter
            {
                ParameterName = "returnValue",
                Direction = System.Data.ParameterDirection.Output,
                SqlDbType = System.Data.SqlDbType.Int,
            };

            var sqlParameters = new []
            {
                new SqlParameter
                {
                    ParameterName = "Emp_ID",
                    Size = 50,
                    Value = Emp_ID ?? Convert.DBNull,
                    SqlDbType = System.Data.SqlDbType.VarChar,
                },
                new SqlParameter
                {
                    ParameterName = "Emp_Name",
                    Size = -1,
                    Value = Emp_Name ?? Convert.DBNull,
                    SqlDbType = System.Data.SqlDbType.VarChar,
                },
                new SqlParameter
                {
                    ParameterName = "Designation",
                    Size = -1,
                    Value = Designation ?? Convert.DBNull,
                    SqlDbType = System.Data.SqlDbType.VarChar,
                },
                new SqlParameter
                {
                    ParameterName = "Location",
                    Size = 50,
                    Value = Location ?? Convert.DBNull,
                    SqlDbType = System.Data.SqlDbType.VarChar,
                },
                new SqlParameter
                {
                    ParameterName = "DOJ",
                    Value = DOJ ?? Convert.DBNull,
                    SqlDbType = System.Data.SqlDbType.Date,
                },
                new SqlParameter
                {
                    ParameterName = "LWD",
                    Value = LWD ?? Convert.DBNull,
                    SqlDbType = System.Data.SqlDbType.Date,
                },
                new SqlParameter
                {
                    ParameterName = "Vertical_L2",
                    Size = 50,
                    Value = Vertical_L2 ?? Convert.DBNull,
                    SqlDbType = System.Data.SqlDbType.VarChar,
                },
                new SqlParameter
                {
                    ParameterName = "Email_ID",
                    Size = 50,
                    Value = Email_ID ?? Convert.DBNull,
                    SqlDbType = System.Data.SqlDbType.VarChar,
                },
                new SqlParameter
                {
                    ParameterName = "RM_Emp_ID",
                    Size = 50,
                    Value = RM_Emp_ID ?? Convert.DBNull,
                    SqlDbType = System.Data.SqlDbType.VarChar,
                },
                new SqlParameter
                {
                    ParameterName = "Band",
                    Size = -1,
                    Value = Band ?? Convert.DBNull,
                    SqlDbType = System.Data.SqlDbType.VarChar,
                },
                new SqlParameter
                {
                    ParameterName = "Level",
                    Size = -1,
                    Value = Level ?? Convert.DBNull,
                    SqlDbType = System.Data.SqlDbType.VarChar,
                },
                new SqlParameter
                {
                    ParameterName = "Role_ID",
                    Size = 50,
                    Value = Role_ID ?? Convert.DBNull,
                    SqlDbType = System.Data.SqlDbType.VarChar,
                },
                parameterreturnValue,
            };
            var _ = await _context.SqlQueryAsync<POSTResult>("EXEC @returnValue = [dbo].[POST] @Emp_ID, @Emp_Name, @Designation, @Location, @DOJ, @LWD, @Vertical_L2, @Email_ID, @RM_Emp_ID, @Band, @Level, @Role_ID", sqlParameters, cancellationToken);

            returnValue?.SetValue(parameterreturnValue.Value);

            return _;
        }
    }
}
